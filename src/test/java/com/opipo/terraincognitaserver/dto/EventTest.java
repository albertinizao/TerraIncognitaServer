package com.opipo.terraincognitaserver.dto;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

import java.util.ArrayList;
import java.util.Collection;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

@DisplayName("Event autogenerated")
public class EventTest {

    private Event event;

    @BeforeEach
    public void init() {
        event = new Event();
    }

    @Test
    @DisplayName("The getter and the setter of name work well")
    public void nameAttributeTest() {
        String name = Integer.toString(1);
        event.setName(name);
        assertEquals(name, event.getName());
    }

    @Test
    @DisplayName("The getter and the setter of startDate work well")
    public void startDateAttributeTest() {
        Long startDate = Long.valueOf(1L);
        event.setStartDate(startDate);
        assertEquals(startDate, event.getStartDate());
    }

    @Test
    @DisplayName("The getter and the setter of endDate work well")
    public void endDateAttributeTest() {
        Long endDate = Long.valueOf(2L);
        event.setEndDate(endDate);
        assertEquals(endDate, event.getEndDate());
    }

    @Test
    @DisplayName("The getter and the setter of openDate work well")
    public void openDateAttributeTest() {
        Long openDate = Long.valueOf(3L);
        event.setOpenDate(openDate);
        assertEquals(openDate, event.getOpenDate());
    }

    @Test
    @DisplayName("The getter and the setter of closeDate work well")
    public void closeDateAttributeTest() {
        Long closeDate = Long.valueOf(4L);
        event.setCloseDate(closeDate);
        assertEquals(closeDate, event.getCloseDate());
    }

    @Test
    @DisplayName("The getter and the setter of price work well")
    public void priceAttributeTest() {
        Double price = Double.valueOf(2D);
        event.setPrice(price);
        assertEquals(price, event.getPrice());
    }

    @Test
    @DisplayName("The getter and the setter of location work well")
    public void locationAttributeTest() {
        Location location = this.buildLocation();
        event.setLocation(location);
        assertEquals(location, event.getLocation());
    }

    private Location buildLocation() {
        return new Location();
    }

    @Test
    @DisplayName("The getter and the setter of image work well")
    public void imageAttributeTest() {
        String image = Integer.toString(3);
        event.setImage(image);
        assertEquals(image, event.getImage());
    }

    @Test
    @DisplayName("The getter and the setter of secretNPC work well")
    public void secretNPCAttributeTest() {
        Boolean secretNPC = Boolean.valueOf(true);
        event.setSecretNPC(secretNPC);
        assertEquals(secretNPC, event.isSecretNPC());
    }

    @Test
    @DisplayName("The getter and the setter of characterGroup work well")
    public void charactersAttributeTest() {
        Collection<CharacterGroup> characterGroups = new ArrayList<>();
        event.setCharacterGroups(characterGroups);
        assertEquals(characterGroups, event.getCharacterGroups());
    }

    @Test
    public void givenSameObjReturnThatTheyAreEquals() {
        Event o1 = new Event();
        Event o2 = new Event();
        assertEquals(o1, o2);
    }

    @Test
    public void givenSameObjReturnZero() {
        Event o1 = new Event();
        Event o2 = new Event();
        assertEquals(0, o1.compareTo(o2));
    }

    @Test
    public void givenObjectFromOtherClassReturnThatTheyArentEquals() {
        Event o1 = new Event();
        assertNotEquals(o1, new String());
    }

    @Test
    public void givenSameObjReturnSameHashCode() {
        Event o1 = new Event();
        Event o2 = new Event();
        assertEquals(o1.hashCode(), o2.hashCode());
    }

}